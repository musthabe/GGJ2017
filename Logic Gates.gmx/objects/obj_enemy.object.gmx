<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_horny_white</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize enemy stats

image_speed = 0.08;

hp = 4;
atk = 1;
redmap = ds_map_create()
bluemap = ds_map_create()
yellowmap = ds_map_create()
whitemap = ds_map_create()
blackmap = ds_map_create()

map = ds_map_create();
ds_map_add(map, RED, redmap);
ds_map_add(redmap, BLUE, spr_shroom_bluered_idle);
ds_map_add(redmap, BLACK, spr_shroom_blackred_idle);
ds_map_add(redmap, YELLOW, spr_shroom_yellowred_idle);
ds_map_add(redmap, WHITE, spr_shroom_whitered_idle);
ds_map_add(redmap, RED, spr_horny_red);

ds_map_add(map, BLUE, bluemap);
ds_map_add(bluemap, BLUE, spr_horny_blue);
ds_map_add(bluemap, BLACK, spr_shroom_blackblue_idle);
ds_map_add(bluemap, YELLOW, spr_shroom_yellowblue_idle);
ds_map_add(bluemap, WHITE, spr_shroom_whiteblue_idle);

ds_map_add(map, YELLOW, yellowmap);
ds_map_add(yellowmap, BLACK, spr_shroom_blackyellow_idle);
ds_map_add(yellowmap, YELLOW, spr_horny_yellow);
ds_map_add(yellowmap, WHITE, spr_shroom_whiteyellow_idle);

ds_map_add(map, WHITE, whitemap );
ds_map_add(whitemap, BLACK, spr_shroom_whiteblack_idle);
ds_map_add(whitemap, WHITE, spr_horny_white);

ds_map_add(map, BLACK, blackmap );
ds_map_add(blackmap, BLACK, spr_shroom_black_idle);

color = ds_list_create();

ds_list_add(color, choose(RED, BLUE, YELLOW, WHITE, BLACK));
ds_list_add(color, choose(RED, BLUE, YELLOW, WHITE, BLACK));

ds_list_sort(color, true);

rootmap = ds_map_find_value(map, ds_list_find_value(color,0));
colorsprite = ds_map_find_value(rootmap, ds_list_find_value(color,1));

sprite_index = colorsprite;



// R - red, B - blue, K-black, Y-yellow, W-white
/*color = choose(RED, BLUE, YELLOW, WHITE, BLACK,
        RB, RK, RY, RW,
        BK, BY, BW,
        KY, KW,
        YW);

switch (color)
{
    case RED: sprite_index = spr_horny_red; break;
    case BLUE: sprite_index = spr_horny_blue; break;
    case YELLOW: sprite_index = spr_horny_yellow; break;
    case WHITE: sprite_index = spr_horny_white; break;
    
    case RB: sprite_index = spr_shroom_bluered_idle; break;
    case RK: sprite_index = spr_shroom_blackred_idle; break;
    case RY: sprite_index = spr_shroom_yellowred_idle; break;
    case RW: sprite_index = spr_shroom_whitered_idle; break;
    
    case BK: sprite_index = spr_shroom_blackblue_idle; break;
    case BY: sprite_index = spr_shroom_blackyellow_idle; break;
    case BW: sprite_index = spr_shroom_whiteblue_idle; break;
    
    case KY: sprite_index = spr_shroom_blackyellow_idle; break;
    case KW: sprite_index = spr_shroom_whiteblack_idle; break;
    
    case YW: sprite_index = spr_shroom_whiteyellow_idle; break;
    
    default: sprite_index = spr_horny_white;
}
 

ds_list_create();*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

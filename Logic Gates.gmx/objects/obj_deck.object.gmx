<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize deck object

//Deck &amp; hand sizes
deck_size = 50;
hand_size = 5;

//Player deck initialize
player_deck = ds_list_create();
temp_deck   = ds_list_create();

//Player hand initialize
hand        = ds_list_create();

//Queue and logical operator lists
queue       = ds_list_create();
operators   = ds_list_create();

//Player hand origin
xhand = 96;
yhand = 640;

//Queue origin
xqueue = 120;
yqueue = 480;

//Card spacing
spacing = 160;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create a deck of cards with 10 of each color
for (var i = 0; i &lt; 10; i++){
    ds_list_add(player_deck, scr_generate_card(colors.red));
}
for (var i = 0; i &lt; 10; i++){
    ds_list_add(player_deck, scr_generate_card(colors.blue));
}
for (var i = 0; i &lt; 10; i++){
    ds_list_add(player_deck, scr_generate_card(colors.yellow));
}
for (var i = 0; i &lt; 10; i++){
    ds_list_add(player_deck, scr_generate_card(colors.white));
}
for (var i = 0; i &lt; 10; i++){
    ds_list_add(player_deck, scr_generate_card(colors.black));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Graphically draw the cards that are in the hand list

/*
//Go through all the cards in the hand list
if ds_list_size(hand) &gt; 0{ 
    for(var i=0; i &lt; ds_list_size(hand); i++){
        card = ds_list_find_value(hand, i);
        card.x = xhand + xhand*i + spacing;
        card.y = yhand;
        card.visible = true;
    }
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
